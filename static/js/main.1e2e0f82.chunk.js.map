{"version":3,"sources":["App.js","index.js"],"names":["App","state","servername","serverurl","mapname","maxplayers","steamid","gamemode","volume","language","total","fileName","status","needed","window","GameDetails","setState","SetFilesTotal","DownloadingFile","SetStatusChanged","SetFilesNeeded","this","className","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OA+KeA,E,4MA5KbC,MAAQ,CACNC,WAAY,KACZC,UAAW,KACXC,QAAS,KACTC,WAAY,KACZC,QAAS,KACTC,SAAU,KACVC,OAAQ,KACRC,SAAU,KACVC,MAAO,KACPC,SAAU,KACVC,OAAQ,KACRC,OAAQ,M,kEAGW,IAAD,OAsBlBC,OAAOC,YAAc,SACnBb,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GARmB,OAUnB,EAAKO,SAAS,CACZd,aACAC,YACAC,UACAC,aACAC,UACAC,WACAC,SACAC,cAQJK,OAAOG,cAAgB,SAAAP,GAAK,OAAI,EAAKM,SAAS,CAAEN,WAUhDI,OAAOI,gBAAkB,SAAAP,GAAQ,OAAI,EAAKK,SAAS,CAAEL,cAWrDG,OAAOK,iBAAmB,SAAAP,GAAM,OAAI,EAAKI,SAAS,CAAEJ,YAOpDE,OAAOM,eAAiB,SAAAP,GAAM,OAAI,EAAKG,SAAS,CAAEH,c,+BAG1C,IAAD,EAcHQ,KAAKpB,MAZPC,EAFK,EAELA,WACAC,EAHK,EAGLA,UACAC,EAJK,EAILA,QACAC,EALK,EAKLA,WACAC,EANK,EAMLA,QACAC,EAPK,EAOLA,SACAC,EARK,EAQLA,OACAC,EATK,EASLA,SACAC,EAVK,EAULA,MACAC,EAXK,EAWLA,SACAC,EAZK,EAYLA,OACAC,EAbK,EAaLA,OAGF,OACE,yBAAKS,UAAU,aACb,6BACE,0CACA,+BACE,+BACE,4BACE,2CACA,4BAAKpB,IAEP,4BACE,0CACA,4BAAKC,IAEP,4BACE,wCACA,4BAAKC,IAEP,4BACE,2CACA,4BAAKC,IAEP,4BACE,wCACA,4BAAKC,IAEP,4BACE,yCACA,4BAAKC,IAEP,4BACE,uCACA,4BAAKC,IAEP,4BACE,yCACA,4BAAKC,IAEP,4BACE,sCACA,4BAAKC,IAEP,4BACE,yCACA,4BAAKC,IAEP,4BACE,uCACA,4BAAKC,IAEP,4BACE,uCACA,4BAAKC,Y,GAnKHU,IAAMC,WCGxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.1e2e0f82.chunk.js","sourcesContent":["import React from \"react\";\n\nclass App extends React.Component {\n  state = {\n    servername: null,\n    serverurl: null,\n    mapname: null,\n    maxplayers: null,\n    steamid: null,\n    gamemode: null,\n    volume: null,\n    language: null,\n    total: null,\n    fileName: null,\n    status: null,\n    needed: null\n  };\n\n  componentDidMount() {\n    /*\n      Called at the start, when the loading screen finishes loading all assets.\n      \n      serverName - Server's name.\n        Convar: hostname\n        For exmaple: \"Garry's Mod Server\"\n      serverURL - URL for the loading screen. \n        Convar: sv_loadingurl\n        For example: \"http://mywebsite.com/myloadingscreen.html\"\n      mapName - The name of the map the server is playing. \n        For example: \"cs_office\"\n      maxPlayers - Maximum number of players for the server.\n        Convar: maxplayers\n      steamID - 64-bit, numeric Steam community ID of the client joining. \n        For example: 76561198012345678\n      gamemode - The gamemode the server is currently playing. \n        Convar: gamemode\n        For example: \"deathrun\"\n      volume - The value of the player's in-game 'volume' console variable, from 0 to 1\n      language - The value of the player's in-game 'gmod_language' console variable, a two letter representation of the player's main menu language\n    */\n    window.GameDetails = (\n      servername,\n      serverurl,\n      mapname,\n      maxplayers,\n      steamid,\n      gamemode,\n      volume,\n      language\n    ) =>\n      this.setState({\n        servername,\n        serverurl,\n        mapname,\n        maxplayers,\n        steamid,\n        gamemode,\n        volume,\n        language\n      });\n\n    /*\n      Called at the start\n\n      total- Total number of files the client will have to download.\n    */\n    window.SetFilesTotal = total => this.setState({ total });\n\n    /*\n      Called when the client starts downloading a file.\n\n      fileName- The full path and name of the file the client is downloading.\n        This path represents the resource's location rather than the actual file's location on the server.\n        For example, the file \"garrysmod/addons/myAddon/materials/models/bobsModels/car.mdl\" will be:\n          \"materials/models/bobsModels/car.mdl\"\n    */\n    window.DownloadingFile = fileName => this.setState({ fileName });\n\n    /*\n      Called when the client's joining status changes.\n\n      status- Current joining status.\n        For example: \"Sending client info...\"\n\n      Under normal conditions this would not be fired until game client starts interacting with server files/workshop. This\n      means you probably can't use \"Retrieving server info\" and everything that goes before downloads.\n    */\n    window.SetStatusChanged = status => this.setState({ status });\n\n    /*\n      Called when the number of files remaining for the client to download changes.\n\n      needed- Number of files left for the client to download.\n    */\n    window.SetFilesNeeded = needed => this.setState({ needed });\n  }\n\n  render() {\n    const {\n      servername,\n      serverurl,\n      mapname,\n      maxplayers,\n      steamid,\n      gamemode,\n      volume,\n      language,\n      total,\n      fileName,\n      status,\n      needed\n    } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div>\n          <h1>TGN Reborn</h1>\n          <table>\n            <tbody>\n              <tr>\n                <td>servername:</td>\n                <td>{servername}</td>\n              </tr>\n              <tr>\n                <td>serverurl:</td>\n                <td>{serverurl}</td>\n              </tr>\n              <tr>\n                <td>mapname:</td>\n                <td>{mapname}</td>\n              </tr>\n              <tr>\n                <td>maxplayers:</td>\n                <td>{maxplayers}</td>\n              </tr>\n              <tr>\n                <td>steamid:</td>\n                <td>{steamid}</td>\n              </tr>\n              <tr>\n                <td>gamemode:</td>\n                <td>{gamemode}</td>\n              </tr>\n              <tr>\n                <td>volume:</td>\n                <td>{volume}</td>\n              </tr>\n              <tr>\n                <td>language:</td>\n                <td>{language}</td>\n              </tr>\n              <tr>\n                <td>total:</td>\n                <td>{total}</td>\n              </tr>\n              <tr>\n                <td>fileName:</td>\n                <td>{fileName}</td>\n              </tr>\n              <tr>\n                <td>status:</td>\n                <td>{status}</td>\n              </tr>\n              <tr>\n                <td>needed:</td>\n                <td>{needed}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}